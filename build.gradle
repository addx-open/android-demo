apply plugin: 'com.android.application'
//apply plugin: 'com.addx.ai.opensdk_plugin'
android {

    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        //todo
        flavorDimensions "versionCode"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("../jks/vicoo.jks")
            storePassword "oociv_addx"
            keyAlias "addx"
            keyPassword "oociv_addx"
        }
    }

    buildTypes {
        //todo
        params {
            Map<String, Object> placeHolderMap = new HashMap<>()
            placeHolderMap.put("XG_ACCESS_ID", "1500010573")
            placeHolderMap.put("XG_ACCESS_KEY", "A1ML07L4XF4L")
            placeHolderMap.put("huaweiId", "100926381")
            placeHolderMap.put("bugsnagKey", "0e1800896236cfa86bd5bece344f7a0e")
            manifestPlaceholders(placeHolderMap)
        }

        debug {
            initWith params
            debuggable true
            zipAlignEnabled false
            println("debug info :" + debug)
            signingConfig signingConfigs.release
        }

        release {
            initWith params
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles 'proguard-rules.pro'
            println("release info :" + release)
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        demo {
            println("progcessProductFlavors:oversea")
        }
    }

    //todo
    variantFilter { variant ->
        def names = variant.flavors*.name
        def buildType = variant.buildType.name


        def name0 = names.get(0)

        if (buildType.contains("params")) {
            setIgnore(true)
            return
        }
        println("names" + names + ",name0=" + name0 + ",buildType=" + buildType + ",ignore=false")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'
    implementation 'androidx.multidex:multidex:2.0.1'

    if(needDepsLocalModule){
        implementation project(path: ':addxbase')
        implementation  project(path: ':addxbind')
        implementation project(path: ':addxvideo')
        implementation project(path: ':addxsettings')
    }else{
        implementation 'com.addx.ai:addxvideo:1.0.2'
        implementation 'com.addx.ai:addxbind:1.0.2'
        implementation 'com.addx.ai:addxsettings:1.0.2'
    }
}

//todo
configurations {
    compile.exclude group: 'org.jetbrains', module: 'annotations'
}